<?php

namespace Grossum\ContactBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Grossum\CoreBundle\Entity\EntityTrait\DateTimeControlTrait;

/**
 * Contact
 */
class Contact
{
    use DateTimeControlTrait;
    /**
     * @var integer
     */
    private $id;

    /**
     * @var string
     */
    private $googleMapsLink;

    /**
     * @var boolean
     */
    private $enabled;

    /**
     * @var \DateTime
     */
    private $createdAt;

    /**
     * @var \DateTime
     */
    private $updatedAt;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $phone;

    /**
     * @var \Doctrine\Common\Collections\Collection
     */
    private $email;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->phone = new \Doctrine\Common\Collections\ArrayCollection();
        $this->email = new \Doctrine\Common\Collections\ArrayCollection();
    }

    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set googleMapsLink
     *
     * @param string $googleMapsLink
     * @return Contact
     */
    public function setGoogleMapsLink($googleMapsLink)
    {
        $this->googleMapsLink = $googleMapsLink;

        return $this;
    }

    /**
     * Get googleMapsLink
     *
     * @return string
     */
    public function getGoogleMapsLink()
    {
        return $this->googleMapsLink;
    }

    /**
     * Set enabled
     *
     * @param boolean $enabled
     * @return Contact
     */
    public function setEnabled($enabled)
    {
        $this->enabled = $enabled;

        return $this;
    }

    /**
     * Get enabled
     *
     * @return boolean
     */
    public function getEnabled()
    {
        return $this->enabled;
    }

    /**
     * Set createdAt
     *
     * @param \DateTime $createdAt
     * @return Contact
     */
    public function setCreatedAt($createdAt)
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    /**
     * Get createdAt
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->createdAt;
    }

    /**
     * Set updatedAt
     *
     * @param \DateTime $updatedAt
     * @return Contact
     */
    public function setUpdatedAt($updatedAt)
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    /**
     * Get updatedAt
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updatedAt;
    }

    /**
     * Add phone
     *
     * @param \Grossum\ContactBundle\Entity\ContactToPhone $phone
     * @return Contact
     */
    public function addPhone(\Grossum\ContactBundle\Entity\ContactToPhone $phone)
    {
        $phone->setContact($this);

        $this->phone[] = $phone;

        return $this;
    }

    /**
     * Remove phone
     *
     * @param \Grossum\ContactBundle\Entity\ContactToPhone $phone
     */
    public function removePhone(\Grossum\ContactBundle\Entity\ContactToPhone $phone)
    {
        $this->phone->removeElement($phone);
    }

    /**
     * Get phone
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPhone()
    {
        return $this->phone;
    }

    /**
     * Add email
     *
     * @param \Grossum\ContactBundle\Entity\ContactToEmail $email
     * @return Contact
     */
    public function addEmail(\Grossum\ContactBundle\Entity\ContactToEmail $email)
    {
        $email->setContact($this);

        $this->email[] = $email;

        return $this;
    }

    /**
     * Remove email
     *
     * @param \Grossum\ContactBundle\Entity\ContactToEmail $email
     */
    public function removeEmail(\Grossum\ContactBundle\Entity\ContactToEmail $email)
    {
        $this->email->removeElement($email);
    }

    /**
     * Get email
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * @return int|string
     */
    public function __toString()
    {
        return $this->getId() ? 'ID: ' . $this->getId() : "Новый контакт";
    }
}
